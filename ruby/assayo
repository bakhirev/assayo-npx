#!/usr/bin/env ruby

def get_save_log_command()
  $raw = "--raw --numstat"
  if ARGV.include?('--no-file')
    $raw = ""
  end
  return "git --no-pager log #{$raw} --oneline --all --reverse --date=iso-strict --pretty=format:\"%ad>%aN>%aE>%s\""
end

def show_message(message)
  if ARGV.include?('--debug')
    puts "Assayo: #{message}"
  end
end

def write_in_file(fileName, content)
  File.open(fileName, 'w') do |file|
    file.write(content)
  end
end

def create_report()
  # folder, when library was saved
  $SOURCE_DIR = '../assayo'
  $SOURCE_PATH = __dir__

  # folder, when user run library
  $DIST_DIR = 'assayo'
  $DIST_PATH = Dir.pwd

  # 1. Copy folder ./assayo from package to ./assayo in project
  $source = File.join($SOURCE_PATH, $SOURCE_DIR)
  $target = File.join($DIST_PATH, $DIST_DIR)
  $copy_cmd = "cp -r #{$source} #{$target}"
  begin
    system($copy_cmd) or raise $copy_cmd
  rescue => e
    puts "Assayo: cant copy files: #{e.message}"
  end
  show_message("directory with HTML report was be created")

  # Run "git log" and save output in file ./assayo/log.txt
  show_message("reading git log was be started")
  $fileName = File.join(Dir.pwd, $DIST_DIR, "log.txt")
  $save_log_cmd = get_save_log_command()
  begin
    system($save_log_cmd, { out: $fileName }) or raise $save_log_cmd
  rescue => e
    puts "Assayo: cant create log file: #{e.message}"
  end
  show_message("the file with git log was be saved")

  # 3. Replace symbols in ./assayo/log.txt
  $content = IO.read($fileName)
  $content = $content.gsub(/`/, "")
  $content = $content.gsub(/\$/, "")
  write_in_file($fileName, "R(f\`#{$content}\`);")
end

create_report()
